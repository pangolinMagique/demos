graphs:
  - id: Broker
    nodes:
      - id: proxy
        module: timeflux.nodes.zmq
        class: Broker

  - id: LSL_EEG
    nodes:
      - id: eeg
        module: timeflux.nodes.lsl
        class: Receive
        params:
          prop: type
          value: EEG
          unit: s
          sync: None
      - id: pub_eeg
        module: timeflux.nodes.zmq
        class: Pub
        params:
          topic: eeg
    edges:
      - source: eeg
        target: pub_eeg
    rate: 5

  - id: UI
    nodes:
      - id: engine
        module: timeflux_ui.nodes.ui
        class: UI
        params:
          routes:
            engine: gui
          settings:
            grid:
              grid:
                rows: 3
                columns: 3
            engine:
              durations:
                step: 1000
                new_grid: 2000
              keys:
                activate: true
                good: b
                bad: v
              sessions: 10
              max_step: 15
      - id: sub
        module: timeflux.nodes.zmq
        class: Sub
        params:
          topics: [model, eeg]
      - id: pub
        module: timeflux.nodes.zmq
        class: Pub
        params:
          topic: events
      - id: bp_filter
        module: timeflux_dsp.nodes.filters
        class: IIRFilter
        params:
          frequencies: [1, 40]
    edges:
      - source: engine:events
        target: pub
      - source: sub:model
        target: engine:model
      - source: sub:eeg
        target: engine:eeg
      - source: sub:eeg
        target: bp_filter
      - source: bp_filter
        target: engine:filtered_eeg

  - id: Record
    nodes:
      - id: sub
        module: timeflux.nodes.zmq
        class: Sub
        params:
          topics: [events, eeg]
      - id: save
        module: timeflux.nodes.hdf5
        class: Save
        params:
          path: data
          #filename: 'test_001.hdf5'
          complevel: 0
          min_itemsize: 200
      - id: debug
        module: timeflux.nodes.debug
        class: Display
      - id: gate
        module: timeflux.nodes.gate
        class: Gate
        params:
          event_opens: start
          event_closes: end
    edges:
      - source: sub:*
        target: save
      - source: sub:events
        target: debug
